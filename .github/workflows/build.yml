name: Android CI/CD

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '1.8'

      - name: Cache Gradle files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      #1 Decode Keystore
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > keystore.jks

      #2  Build Release Flavor APK
      - name: Build Release Flavor APK
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      #3
#      - name: Build Release Flavor Bundle
#        env:
#          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
#          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
#          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
#        run: ./gradlew bundleBundleAfatRelease


      #4 Upload APK to Github Artifacts
      - name: List APK file
        run: ls -alh app/release/

      #5 Upload APK to Github Artifacts
      - name: Upload APK to Github Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: app/release/app-release.apk

      #6 Create a GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.0
        with:
          tag_name: version 1
          release_name: Release v1.0.0
          body: Release notes for version - first release
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #7 Upload APK to Release
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
